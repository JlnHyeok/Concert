############################# 서버 기본 설정 #############################

# 이 서버의 역할. 이 값을 설정하면 KRaft 모드로 실행됩니다.
# process.roles=broker,controller  (이 부분은 이미 설정되어 있음)
process.roles=${KAFKA_PROCESS_ROLES:-broker,controller}  # 환경변수로 설정, 기본값 broker,controller

# 이 인스턴스의 역할에 관련된 노드 ID
# node.id=1
node.id=${KAFKA_NODE_ID:-1}  # 환경변수로 설정, 기본값 1

# 컨트롤러 쿼럼에 대한 연결 문자열
# controller.quorum.voters=1@localhost:9093
controller.quorum.voters=${KAFKA_CONTROLLER_QUORUM_VOTERS:-1@localhost:9093}  # 환경변수로 설정, 기본값 1@localhost:9093

############################# 소켓 서버 설정 #############################

# 소켓 서버가 수신하는 주소.
# listeners=PLAINTEXT://:9092,CONTROLLER://:9093
listeners=${KAFKA_LISTENERS:-PLAINTEXT://:9092,CONTROLLER://:9093}  # 환경변수로 설정, 기본값 PLAINTEXT://:9092,CONTROLLER://:9093

# 브로커 간 통신에 사용되는 리스너 이름.
# inter.broker.listener.name=PLAINTEXT
inter.broker.listener.name=${KAFKA_INTER_BROKER_LISTENER_NAME:-PLAINTEXT}  # 환경변수로 설정, 기본값 PLAINTEXT

# 브로커가 클라이언트에게 광고하는 리스너 이름, 호스트명, 포트.
# advertised.listeners=PLAINTEXT://localhost:9092
advertised.listeners=${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://localhost:9092}  # 환경변수로 설정, 기본값 PLAINTEXT://localhost:9092

# 컨트롤러가 사용하는 리스너 이름의 콤마로 구분된 목록.
# controller.listener.names=CONTROLLER
controller.listener.names=${KAFKA_CONTROLLER_LISTENER_NAMES:-CONTROLLER}  # 환경변수로 설정, 기본값 CONTROLLER

# 리스너 이름을 보안 프로토콜에 매핑
# listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
listener.security.protocol.map=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:-CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL}  # 환경변수로 설정

############################# 로그 기본 설정 #############################

# 로그 파일을 저장할 디렉토리의 콤마로 구분된 목록
# log.dirs=/tmp/kraft-combined-logs
log.dirs=${KAFKA_LOG_DIRS:-/tmp/kraft-combined-logs}  # 환경변수로 설정, 기본값 /tmp/kraft-combined-logs

# 주제당 기본 로그 파티션 수
# num.partitions=1
num.partitions=${KAFKA_NUM_PARTITIONS:-1}  # 환경변수로 설정, 기본값 1

# 로그 복구 및 종료 시 플러시를 위한 데이터 디렉토리당 스레드 수
# num.recovery.threads.per.data.dir=1
num.recovery.threads.per.data.dir=${KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR:-1}  # 환경변수로 설정, 기본값 1

############################# 내부 주제 설정 #############################

# 그룹 메타데이터 내부 주제인 "__consumer_offsets"와 "__transaction_state"에 대한 복제 인자
# offsets.topic.replication.factor=1
offsets.topic.replication.factor=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}  # 환경변수로 설정, 기본값 1

# 트랜잭션 상태 로그 주제에 대한 복제 인자
# transaction.state.log.replication.factor=1
transaction.state.log.replication.factor=${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:-1}  # 환경변수로 설정, 기본값 1

############################# 로그 보존 정책 #############################

# 로그 파일이 삭제될 수 있는 최소 나이
# log.retention.hours=168
log.retention.hours=${KAFKA_LOG_RETENTION_HOURS:-168}  # 환경변수로 설정, 기본값 168

# 로그 세그먼트 파일의 최대 크기
# log.segment.bytes=1073741824
log.segment.bytes=${KAFKA_LOG_SEGMENT_BYTES:-1073741824}  # 환경변수로 설정, 기본값 1073741824

# 로그 세그먼트가 보존 정책에 따라 삭제 가능한지 확인하는 간격
# log.retention.check.interval.ms=300000
log.retention.check.interval.ms=${KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS:-300000}  # 환경변수로 설정, 기본값 300000
