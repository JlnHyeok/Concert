############################# Server Basics #############################

# 이 서버의 역할. 이 값을 설정하면 KRaft 모드로 실행됩니다.
process.roles=${KAFKA_CFG_PROCESS_ROLES:controller}

# 이 인스턴스의 역할에 대한 노드 ID
node.id=${KAFKA_CFG_NODE_ID:1}

# 컨트롤러 쿼럼의 연결 문자열
controller.quorum.voters=${KAFKA_CFG_CONTROLLER_QUORUM_VOTERS:1@localhost:9093}

############################# Socket Server Settings #############################

# 소켓 서버가 수신하는 주소
listeners=${KAFKA_CFG_LISTENERS:CONTROLLER://:9093}

# 컨트롤러에서 사용하는 리스너 이름 목록 (콤마로 구분)
controller.listener.names=${KAFKA_CFG_CONTROLLER_LISTENER_NAMES:CONTROLLER}

# 리스너 이름을 보안 프로토콜에 매핑, 기본적으로 동일합니다
#listener.security.protocol.map=${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP:PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL}

# 서버가 네트워크에서 요청을 수신하고 응답을 보내는 데 사용하는 스레드 수
num.network.threads=${KAFKA_CFG_NUM_NETWORK_THREADS:3}

# 서버가 요청을 처리하는 데 사용하는 스레드 수 (디스크 I/O 포함 가능)
num.io.threads=${KAFKA_CFG_NUM_IO_THREADS:8}

# 소켓 서버에서 사용하는 전송 버퍼 (SO_SNDBUF)
socket.send.buffer.bytes=${KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES:102400}

# 소켓 서버에서 사용하는 수신 버퍼 (SO_RCVBUF)
socket.receive.buffer.bytes=${KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES:102400}

# 소켓 서버가 수락할 수 있는 요청의 최대 크기
socket.request.max.bytes=${KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES:104857600}

############################# Log Basics #############################

# 로그 파일을 저장할 디렉토리 목록 (콤마로 구분)
log.dirs=${KAFKA_CFG_LOG_DIRS:/tmp/kraft-controller-logs}

# 각 주제에 대한 기본 파티션 수
num.partitions=${KAFKA_CFG_NUM_PARTITIONS:1}

# 로그 복구 및 종료 시 로그 플러시를 위한 데이터 디렉토리당 스레드 수
num.recovery.threads.per.data.dir=${KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR:1}

############################# Internal Topic Settings #############################

# 그룹 메타데이터 내부 주제의 복제 인자 (예: "__consumer_offsets", "__transaction_state")
offsets.topic.replication.factor=${KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR:1}
transaction.state.log.replication.factor=${KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:1}
transaction.state.log.min.isr=${KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR:1}

############################# Log Flush Policy #############################

# 메시지는 즉시 파일 시스템에 기록되지만, 기본적으로 fsync()를 통해 OS 캐시를 지연하여 동기화합니다.
# 아래 설정은 데이터를 디스크에 플러시하는 방식을 제어합니다.
log.flush.interval.messages=${KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES:10000}
log.flush.interval.ms=${KAFKA_CFG_LOG_FLUSH_INTERVAL_MS:1000}

############################# Log Retention Policy #############################

# 나이로 인해 로그 파일을 삭제할 수 있는 최소 시간
log.retention.hours=${KAFKA_CFG_LOG_RETENTION_HOURS:168}

# 로그 세그먼트 파일의 최대 크기
log.segment.bytes=${KAFKA_CFG_LOG_SEGMENT_BYTES:1073741824}

# 로그 세그먼트를 삭제할 수 있는지 확인하는 간격
log.retention.check.interval.ms=${KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS:300000}
